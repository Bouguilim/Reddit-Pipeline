
x-airflow-common:
  &airflow-common
  build:
    context: .
    dockerfile: Dockerfile
  env_file:
    - airflow.env
  volumes:
    - ./config:/opt/airflow/config
    - ./dags:/opt/airflow/dags
    - ./data:/opt/airflow/data
    - ./logs:/opt/airflow/logs
    - ./pipelines:/opt/airflow/pipelines
    - ./utils:/opt/airflow/utils
    - ./requirements.txt:/opt/airflow/requirements.txt
  depends_on:
    - postgres

services:

  postgres:
    image: postgres:12
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: airflow_reddit

  airflow-init:
    <<: *airflow-common
    command: >
      bash -c "pip install -r /opt/airflow/requirements.txt && airflow db init && airflow db upgrade && airflow users create --username admin --firstname admin --lastname admin --role Admin --email airflow@airflow.com --password admin"
    restart: "no"

  airflow-webserver:
    <<: *airflow-common
    container_name : airflow-webserver
    command: webserver
    ports:
      - "8080:8080"
    depends_on:
      airflow-init :
        condition: service_completed_successfully
        restart: true

  airflow-scheduler:
    <<: *airflow-common
    container_name : airflow-scheduler
    command: scheduler
    depends_on:
      airflow-init :
        condition: service_completed_successfully
        restart: true

  mongodb:
    image: mongo:5.0
    container_name: mongodb
    ports:
      - 27017:27017
    networks:
      - airflow_net

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - airflow_net

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
    ports:
      - 9092:9092
    networks:
      - airflow_net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/var/lib/grafana
    networks:
      - airflow_net

networks:
  airflow_net:
    driver: bridge
